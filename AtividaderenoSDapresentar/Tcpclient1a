import java.io.*;
import java.net.*;

public class SimpleTcpServer {
    public static void main(String[] args) {
        int port = 12345; // Porta do servidor
        try (ServerSocket serverSocket = new ServerSocket(port)) {
            System.out.println("Servidor TCP está escutando na porta " + port);
            while (true) {
                Socket clientSocket = serverSocket.accept();
                new ClientHandler(clientSocket).start();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

class ClientHandler extends Thread {
    private Socket clientSocket;

    public ClientHandler(Socket socket) {
        this.clientSocket = socket;
    }

    public void run() {
        try (BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
             PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true)) {

            String inputLine;
            while ((inputLine = in.readLine()) != null) {
                String response = processCommand(inputLine);
                out.println(response);
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                clientSocket.close();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    private String processCommand(String command) {
        if (command.startsWith("invert ")) {
            String textToInvert = command.substring(7);
            return new StringBuilder(textToInvert).reverse().toString();
        } else if (command.startsWith("count ")) {
            String textToCount = command.substring(6);
            return String.valueOf(textToCount.length());
        } else {
            String[] numbers = command.split(" ");
            try {
                int sum = 0;
                for (String number : numbers) {
                    sum += Integer.parseInt(number);
                }
                return String.valueOf(sum);
            } catch (NumberFormatException e) {
                return "Erro: Entrada inválida para soma.";
            }
        }
    }
}